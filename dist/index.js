(function(){function index(it
/**/) {
var out='<!doctype html>\n<html lang="de">\n<head>\n<title>'+(it.title)+'</title>\n<meta charset="utf-8"/>\n<base href="'+(it.base)+'"/>\n'; var versions = {   angular: '1.4.9',   bootstrap: '3.3.6',   fontAwesome: '4.4.0',   jquery: '2.1.4',   lodash: '4.1.0' }; var styles = [   'https://maxcdn.bootstrapcdn.com/bootstrap/'+versions.bootstrap+'/css/bootstrap',   'https://maxcdn.bootstrapcdn.com/font-awesome/'+versions.fontAwesome+'/css/font-awesome' ]; var scripts = [   'https://ajax.googleapis.com/ajax/libs/jquery/'+versions.jquery+'/jquery',   'https://ajax.googleapis.com/ajax/libs/angularjs/'+versions.angular+'/angular',   'https://ajax.googleapis.com/ajax/libs/angularjs/'+versions.angular+'/angular-messages',   'https://ajax.googleapis.com/ajax/libs/angularjs/'+versions.angular+'/angular-aria',   'https://ajax.googleapis.com/ajax/libs/angularjs/'+versions.angular+'/angular-animate',   'https://ajax.googleapis.com/ajax/libs/angularjs/'+versions.angular+'/angular-sanitize',   'https://cdnjs.cloudflare.com/ajax/libs/lodash.js/'+versions.lodash+'/lodash' ]; out+='\n';var arr1=styles;if(arr1){var s,i1=-1,l1=arr1.length-1;while(i1<l1){s=arr1[i1+=1];out+='\n';if(it.env !== 'production'){out+='\n<link href="'+(s)+'.css" rel="stylesheet"/>\n';}else if(it.env === 'production'){out+='\n<link href="'+(s)+'.min.css" rel="stylesheet"/>\n';}out+='\n';} } out+='\n';var arr2=scripts;if(arr2){var s,i2=-1,l2=arr2.length-1;while(i2<l2){s=arr2[i2+=1];out+='\n';if(it.env !== 'production'){out+='\n<script src="'+(s)+'.js"></script>\n';}else if(it.env === 'production'){out+='\n<script src="'+(s)+'.min.js"></script>\n';}out+='\n';} } out+='\n';if(it.env === 'production'){out+='\n<script src="dist/vendors.js"></script>\n';}out+='\n<script src="dist/app.js"></script>\n<script type="text/x-mathjax-config">\n  MathJax.Hub.Config({\n    tex2jax: {\n      inlineMath: [[\'$\',\'$\'], [\'\\\\(\',\'\\\\)\']],\n      processEscapes: true\n    }\n  });\n</script>\n<script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>\n</head>\n<body ng-cloak username="'+(it.username)+'">\n<ui-view></ui-view>\n</body>\n</html>';return out;
}var itself=index, _encodeHTML=(function (doNotSkipEncoded) {
		var encodeHTMLRules = { "&": "&#38;", "<": "&#60;", ">": "&#62;", '"': "&#34;", "'": "&#39;", "/": "&#47;" },
			matchHTML = doNotSkipEncoded ? /[&<>"'\/]/g : /&(?!#?\w+;)|<|>|"|'|\//g;
		return function(code) {
			return code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : "";
		};
	}());if(typeof module!=='undefined' && module.exports) module.exports=itself;else if(typeof define==='function')define(function(){return itself;});else {window.render=window.render||{};window.render['index']=itself;}}());