(function(){function index(it
/**/) {
var out='<doctype html><html lang="de" ng-app="wbt" strict-di><head><title>'+(it.title)+'</title><meta charset="utf-8"/><base href="'+(it.base)+'"/>';var versions = { angular: '1.4.8', bootstrap: '3.3.6', fontAwesome: '4.4.0', jquery: '2.1.4', lodash: '3.10.1', restangular: '1.5.1'};var styles = [ 'https://maxcdn.bootstrapcdn.com/bootstrap/'+versions.bootstrap+'/css/bootstrap', 'https://maxcdn.bootstrapcdn.com/font-awesome/'+versions.fontAwesome+'/css/font-awesome'];var scripts = [ 'https://ajax.googleapis.com/ajax/libs/jquery/'+versions.jquery+'/jquery', 'https://ajax.googleapis.com/ajax/libs/angularjs/'+versions.angular+'/angular', 'https://ajax.googleapis.com/ajax/libs/angularjs/'+versions.angular+'/angular-messages', 'https://ajax.googleapis.com/ajax/libs/angularjs/'+versions.angular+'/angular-aria', 'https://ajax.googleapis.com/ajax/libs/angularjs/'+versions.angular+'/angular-animate', 'https://ajax.googleapis.com/ajax/libs/angularjs/'+versions.angular+'/angular-sanitize', 'https://cdnjs.cloudflare.com/ajax/libs/lodash.js/'+versions.lodash+'/lodash', 'https://cdnjs.cloudflare.com/ajax/libs/restangular/'+versions.restangular+'/restangular'];var arr1=styles;if(arr1){var s,i1=-1,l1=arr1.length-1;while(i1<l1){s=arr1[i1+=1];if(!it.prod){out+='<link href="'+(s)+'.css" rel="stylesheet"/>';}else if(true){out+='<link href="'+(s)+'.min.css" rel="stylesheet"/>';}} } var arr2=scripts;if(arr2){var s,i2=-1,l2=arr2.length-1;while(i2<l2){s=arr2[i2+=1];if(!it.prod){out+='<script src="'+(s)+'.js"></script>';}else if(true){out+='<script src="'+(s)+'.min.js"></script>';}} } out+='<script src="dist/vendors.js"></script><script src="dist/app.js"></script></head><body ng-cloak username="'+(it.username)+'"><ui-view></ui-view><script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script><script> MathJax.Hub.Config({ tex2jax: { inlineMath: [[\'$\',\'$\'], [\'\\\\(\',\'\\\\)\']], processEscapes: true } });</script></body></html>';return out;
}var itself=index, _encodeHTML=(function (doNotSkipEncoded) {
		var encodeHTMLRules = { "&": "&#38;", "<": "&#60;", ">": "&#62;", '"': "&#34;", "'": "&#39;", "/": "&#47;" },
			matchHTML = doNotSkipEncoded ? /[&<>"'\/]/g : /&(?!#?\w+;)|<|>|"|'|\//g;
		return function(code) {
			return code ? code.toString().replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : "";
		};
	}());if(typeof module!=='undefined' && module.exports) module.exports=itself;else if(typeof define==='function')define(function(){return itself;});else {window.render=window.render||{};window.render['index']=itself;}}());